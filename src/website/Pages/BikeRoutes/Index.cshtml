@page
@model CCC.website.Pages.BikeRoutes.IndexPageModel
@using CCC.Authorization
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery

@{
  var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
  ViewData["Title"] = "Route Listing";
}

@section StyleSheets
  {
  <link rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.css">
}

@section Scripts
  {
  <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js"></script>
  <script src="~/js/ajax-data.js" asp-append-version="true"></script>

  <script>
    function operateFormatter(value, row, index) {
      @* console.log("operateFormatter was called", { value, row, index }); *@
      let output = [];

      @if(User.IsContributor())
      {
        @: output.push(`<a href="Edit/${row.id}" title="Edit"><i class="fa-solid fa-pen-to-square fa-xl ccc-green"></i></a>&ensp;`);
      }

      output.push('<a class="toggle-favorite-route" href="javascript:void(0)" title="Favorite">');
      favoriteText = row.isFavorite ? "fa-solid" : "fa-regular";
      output.push(`<i class="${favoriteText} fa-thumbs-up fa-xl ccc-green"></i></a>&ensp;`);
  
      output.push(`<a href="Details/${row.id}" title="Details"><i class="fa-solid fa-bicycle fa-xl ccc-pink"></i></a>&ensp;`);
      output.push(`<a href="${row.rideWithGPSLink}" target="_blank" title="Ride With GPS"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 512 512" class="rwg-icon" height="40"><path fill="currentColor" fill-rule="evenodd" d="M373.984 130.817c.595 19.072-15.465 31.587-29.74 32.183-14.274 0-34.497-9.536-33.903-32.183 0-1.192-1.189-7.151-5.947-10.131-10.707-6.556-24.387-8.344-37.472-4.768l-8.922 2.98c9.517-16.687 44.609-26.819 79.107-21.455 17.249 2.98 36.282 14.303 36.877 33.374m-80.629 164.142 1.18-1.181q1.77-2.657 5.311-7.086l1.77-1.771v.591c11.212-11.219 25.964-24.799 37.175-30.113 11.802-5.905 22.423-9.447 41.306-7.676 43.075 4.133 72.579 31.294 72.579 71.444s-35.404 72.625-79.07 72.625c-23.013 0-46.026-13.581-59.598-25.98-.59 0-1.18-.59-1.77-1.181C303.386 378.212 334.07 416 382.457 416 438.514 416 481 372.307 481 317.986c0-53.14-43.076-96.243-96.183-97.423-35.862-3.14-62.189 11.099-76.134 18.642-4.412 2.385-7.584 4.101-9.427 4.385-6.491 1.181-74.94-46.055-81.431-55.502-2.36-4.133 1.77-17.123 46.026-20.666 20.063 21.847 41.306 38.379 80.251 38.379 18.292 0 45.436-10.037 55.467-16.532 10.032-6.495 5.901-11.219 5.901-11.219s0 3.543-12.982 6.495c-12.391 2.953-23.013 4.724-44.256 2.953l-.182-.016c-7.569-.627-47.731-3.956-61.776-55.486-57.828-5.905-118.016 14.761-118.016 53.73 0 12.4 1.181 28.342 35.995 49.007 24.193 14.171 47.797 38.379 47.797 49.007 0 9.447-39.536 53.14-58.418 73.215-.822.823-1.77 1.645-2.787 2.526-1.174 1.017-2.439 2.113-3.704 3.379-13.572 14.171-32.454 22.437-53.107 22.437-39.535 0-72.58-33.065-72.58-74.396 0-25.98 12.982-47.236 30.684-61.997 8.852-6.495 20.063-11.809 36.585-13.58 6.491-.591 12.982-1.181 25.374 1.771.59.59 1.18.59 1.77.59 0-8.266-15.342-14.761-23.603-15.942-8.851-1.18-16.522-.59-20.063 0C64.405 227.057 29 268.389 29 318.576c0 54.321 49.567 96.834 100.313 96.834h.001c6.491 0 11.801 0 17.112-.591 29.504-2.362 56.057-12.99 102.083-68.492.858-.981 2.734-3.083 5.285-5.94 9.73-10.901 29.276-32.798 39.561-45.428" clip-rule="evenodd"></path></svg></a>`);
      output.push(`<a href="${row.garminConnectLink}" target="_blank" title="Garmin Connect">Garmin</a>`);
      return output.join('');

    }

    var $table = $('#bikeRouteTable')

    function toggleFavoriteRoute(row) {
      console.log("Toggling favorite for row", row);
      if(row.isFavorite)
      {
        $.ajax({
          type: "POST",
          headers: { "RequestVerificationToken": '@token' },
          url: "?handler=RemoveFavoriteRoute",
          data: { routeId: row.id}
        }).done(function (response) {
          @* console.log("Remove Favorite complete"); *@
          $table.bootstrapTable('refresh')
        });
      }
      else
      {
        $.ajax({
          type: "POST",
          headers: { "RequestVerificationToken": '@token' },
          url: "?handler=AddFavoriteRoute",
          data: { routeId: row.id}
        }).done(function (response) {
          @* console.log("Add Favorite complete"); *@
          $table.bootstrapTable('refresh')
        });   
      }
    }

    $('#filterByDistance').click(function () {
      var min = document.getElementById("minDistance").value;
      var max = document.getElementById("maxDistance").value;
      $table.bootstrapTable('filterBy', {
        //no filters here, just the algo
      }, {
        'filterAlgorithm': (row, filters) => {
        return (row.distance >= min) && (row.distance <= max);
      }
      })
    });

    $('#clearDistanceFilter').click(function() {
      $table.bootstrapTable('filterBy', { }, {'filterAlgorithm': 'and'});
    })
    operateEvents = {
      'click .toggle-favorite-route': function (e, value, row, index) {
        toggleFavoriteRoute(row);
      },
      
      'click .route-details': function (e, value, row, index) {
        location.href = `BikeRoutes/Details/${row.id}`;
      }
    }
  </script>

}
<h3>I didn't know you liked Bike Routes</h3>

@* ajax version with pagination *@
<table data-toggle="table" data-search="true" data-data-type="json" data-ajax="fetchBikeRoutes" data-pagination="true"
  data-sort-name="name"
  data-sort-order="asc"
  class="table" id="bikeRouteTable">
  <thead>
    <tr>
      <th data-field="name" data-sortable="true">Name</th>
      <th data-field="distance" data-sortable="true">Mileage</th>
      <th data-field="description">Description</th>
      <th data-field="operate" data-formatter="operateFormatter" data-events="operateEvents"></th>
      @* <th data-field="rideWithGPSLink">Ride With GPS</th>
      <th data-field="garminConnectLink">Garmin Connect</th> *@
    </tr>
  </thead>
</table>

@* Custom Milage filters *@
<style>
#select {
  width: 100px;
  display: inline-block;
}
</style>

<div class="toolbar">
  Distance - 
  <label for="minDistance">Min:</label>
  <input type="number" id="minDistance" name="minDistance">
  <label for="maxDistance">Max:</label>
  <input type="number" id="maxDistance" name="maxDistance">
  <button class="btn btn-secondary" id="filterByDistance">Filter</button>
  <button class="btn btn-secondary" id="clearDistanceFilter">Clear</button>
</div>


@if(User.ShowCrudOperations())
{
    <div>
    <a asp-page="/BikeRoutes/Create" class="btn btn-primary btn-lg" role="button" ><i class="fa-solid fa-circle-plus"></i> Create Route</a>
    </div>
}
@* Static table version *@
@* <table data-toggle="table" data-search="true" data-pagination="true" class="table" id="table2">
  <thead>
    <tr>
      <th data-field="name" data-sortable="true">Name</th>
      <th data-field="distance" data-sortable="true">Mileage</th>
      <th data-field="description">Description</th>
      <th data-field="operate" data-formatter="operateFormatter" data-events="operateEvents">Actions</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var route in Model.Routes)
    {
      <tr>
        <td>@Html.DisplayFor(modelItem => route.Name)</td>
        <td>@Html.DisplayFor(modelItem => route.Distance)</td>
        <td>@Html.DisplayFor(modelItem => route.Description)</td>
        <td></td>
      </tr>
    }
  </tbody>
</table> *@
