@page "{id:guid}"
@using CCC.Entities
@using CCC.Enums
@using CCC.website.Models
@model CCC.website.Pages.BikeRoutes.EditPageModel

@{
    ViewData["Title"] = "Edit Route Listing";
}

@section StyleSheets
{
    @* <link rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.css"> *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
}

@section Scripts
{
    @* <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js"></script> *@
}

<div class="row">
    Bike Route Details
</div>
<form method="post">
    <div class="form-group">
        @Html.HiddenFor(model => Model.BikeRoute.Id)
        @Html.LabelFor(model => Model.BikeRoute.Name)
        @Html.EditorFor(model => Model.BikeRoute.Name, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
                    @placeholder = "name"
                }
            })
        <small id="name" class="form-text text-muted">What's the name of the route?</small>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => Model.BikeRoute.Description)
        @Html.EditorFor(model => Model.BikeRoute.Description, new { htmlAttributes = new { @class = "form-control" } })
        <small id="desciption" class="form-text text-muted">Provide a description of the route</small>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => Model.BikeRoute.Distance)
        @Html.EditorFor(model => Model.BikeRoute.Distance, new { htmlAttributes = new { @class = "form-control" } })
        <small id="desciption" class="form-text text-muted">How many miles?</small>
    </div>
    <input class="btn btn-primary" id="Submit" type="submit" value="Update Details" />
    <input class="btn btn-warning" id="Delete" type="submit" value="Delete Route" asp-page-handler="Delete"
        onclick="return confirm('Are you sure you want to Delete the route?')" />    
</form>
 <p> </p>

<form method="post">
    @Html.HiddenFor(model => Model.BikeRoute.Id)
    @Html.HiddenFor(model => Model.BikeRoute.Name)
    @Html.HiddenFor(model => Model.BikeRoute.Description)
    @Html.HiddenFor(model => Model.BikeRoute.Distance)
    <table class="table table-striped table-bordered table-sm" id="cueEditTable">
        <thead>
            <tr>
                <th>Operation</th>
                <th>Street / Landmark</th>
                <th>Mile Marker</th>
                <th>Notes</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @for(int i=0 ; i < Model.BikeRoute.Cues.Count; i++)
            {
                    <tr>
                        <td>
                            <div class="form-group">
                                <select class="form-control" aria-placeholder="CueOperation" name=@($"BikeRoute.Cues[{i}].Operation") id=@($"BikeRoute_Cues_{i}__Operation") asp-items='EnumHelper.SelectListForEnum_Selected<CCC.Enums.CueOperation>(@Model.BikeRoute.Cues[i].Operation)'>
                                    @* <option selected value="@Model.BikeRoute.Cues[i].Operation">@Model.BikeRoute.Cues[i].Operation</option> *@
                                </select>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.EditorFor(modelItem => Model.BikeRoute.Cues[i].StreetName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.EditorFor(modelItem => Model.BikeRoute.Cues[i].MileMarker, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.EditorFor(modelItem => Model.BikeRoute.Cues[i].Notes, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td>
                            <input class="btn btn-warning" id="DeleteCue" type="submit" value="Delete" asp-page-handler="RemoveCueRow" asp-route-cueIndex=@i />
                            <input class="btn btn-secondary" id="InsertCue" type="submit" value="Insert" asp-page-handler="InsertCueRow" asp-route-cueIndex=@i />
                        </td>
                    </tr>
            }
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td>
                    <input class="btn btn-secondary" id="AddCue" type="submit" value="Add Cue" asp-page-handler="AddCueRow"  />
                </td>
            </tr>

        </tbody>
    </table>

    <input class="btn btn-primary" id="Save" type="submit" value="Save Cues" asp-page-handler="SaveCueChanges"
        onclick="return confirm('Are you sure?')" />
    <input class="btn btn-warning" id="Discard" type="submit" value="Discard Cue Changes" asp-page-handler="DiscardCueChanges"
        onclick="return confirm('Are you sure?')" />
</form>
@*
get model
save list of cues in temp data
page handlers work on temp data model
hit save changes -> uses replace all cues endpoint with temp data version
hit discard changes -> blow away temp data
page displays temp data version of cues


disable all form controls
click a row to enable them
wait for row to lose focus
changes are added to list of requests

user hits cancle - list is deleted
user hits save - each operation is submitted

*@
@* <div class="container">
Edit Route Cues
<div class="row">
<div class="col">
Operation
</div>
<div class="col">
Street Name
</div>
<div class="col">
Notes
</div>
<div class="col">
Mile Marker
</div>
<div class="col">
Index
</div>
<div class="col">
Submit
</div>
</div>

@for(int index = 0 ; index < Model.BikeRoute.Cues.Count; index++)
{
<div class="row">
@Html.DisplayFor(modelItem => Model.BikeRoute.Cues[index], "CueSheetRowForEdit")
<div class="col">
@Html.DisplayFor( m => index)
</div>
<div class="col">
<form asp-page-handler="DeleteCueRow" method="post">
@Html.HiddenFor( m=> index)
<input id = "Submit" type = "submit" value = "Delete Row" />
</form>
</div>
</div>
}
<form method="post">
<div class="row">
<div class="col">
<select name="CueRow.Operation" asp-items='EnumHelper.SelectListForEnum<CueOperation>()'>
<option disabled selected value="">Select an operation </option>
</select>
</div>
<div class="col">
<input asp-for="CueRow.StreetName" placeholder="street name" />
</div>
<div class="col">
<input asp-for="CueRow.MileMarker" placeholder="mile marker" />
</div>
<div class="col">
<select name="index" asp-items='Enumerable.Range(0,Model.BikeRoute.Cues.Count).Select( i=> new SelectListItem{
Text=i.ToString(), Value=i.ToString()})'>
<option disabled selected>index</option>
</select>
</div>
<div class="col">
<input id = "Submit" type = "submit" value = "Add Row" asp-page-handler="AddCueRow" title="Add new row at end"/>
<input id = "SubmitInsert" type = "submit" value = "Insert" asp-page-handler="InsertCueRow" title="Insert new row before
index"/>
</div>
</div>
</form>
</div>
*@
