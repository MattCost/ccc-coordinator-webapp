@page
@model CCC.website.Pages.Users.IndexPageModel

@using CCC.Authorization
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery

@{
  var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
  ViewData["Title"] = "User Management";
}

@section StyleSheets
  {
  <link rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
}


@section Scripts
  {
  <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js"></script>
  <script src="~/js/ajax-data.js" asp-append-version="true"></script>

  <script>
    function operateFormatter(value, row, index) {
      @* console.log("operateFormatter was called", { value, row, index }); *@
      let output = [];
      output.push(`<a href="javascript:alert('make Coordinator')" title="Details">Coordinator</a>`);
      output.push(`<a href="javascript:alert("make Admin")" title="Details">Admin</a>`);

      return output.join('');

    }

    var $table = $('#allUserTable')

    function toggleFavoriteRoute(row) {
      console.log("Toggling favorite for row", row);
      if(row.isFavorite)
      {
        $.ajax({
          type: "POST",
          headers: { "RequestVerificationToken": '@token' },
          url: "?handler=RemoveFavoriteRoute",
          data: { routeId: row.id}
        }).done(function (response) {
          @* console.log("Remove Favorite complete"); *@
          $table.bootstrapTable('refresh')
        });
      }
      else
      {
        $.ajax({
          type: "POST",
          headers: { "RequestVerificationToken": '@token' },
          url: "?handler=AddFavoriteRoute",
          data: { routeId: row.id}
        }).done(function (response) {
          @* console.log("Add Favorite complete"); *@
          $table.bootstrapTable('refresh')
        });   
      }
    }

    $('#filterByDistance').click(function () {
      var min = document.getElementById("minDistance").value;
      var max = document.getElementById("maxDistance").value;
      $table.bootstrapTable('filterBy', {
        //no filters here, just the algo
      }, {
        'filterAlgorithm': (row, filters) => {
        return (row.distance >= min) && (row.distance <= max);
      }
      })
    });

    $('#clearDistanceFilter').click(function() {
      $table.bootstrapTable('filterBy', { }, {'filterAlgorithm': 'and'});
    })
    operateEvents = {
      'click .toggle-favorite-route': function (e, value, row, index) {
        toggleFavoriteRoute(row);
      },
      
      'click .route-details': function (e, value, row, index) {
        location.href = `BikeRoutes/Details/${row.id}`;
      }
    }
  </script>

}


@if(Model.ShowAdminSection)
{
<h3>Hello Admin</h3>
    <div class="row">
        Placeholder for CoordinatorAdmin Assignments
    </div>
}

@if(Model.ShowCoordinatorAdminSection || Model.ShowAdminSection)
{
<h3>Hello Coordinator Admin</h3>
    <div class="row">
        Placeholder for Coordinator Assignments
    </div>
}

@* ajax version with pagination *@
<table data-toggle="table" data-search="true" data-data-type="json" data-ajax="fetchAllUsers" data-pagination="true"
  data-sort-name="name"
  data-sort-order="asc"
  class="table" id="allUserTable">
  <thead>
    <tr>
      <th data-field="displayName" data-sortable="true">Name</th>
      <th data-field="userId" data-sortable="true">userId</th>
      <th data-field="isAdmin" data-sortable="true">System Admin</th>
      <th data-field="isCoordinator" data-sortable="true">Coordinator</th>
      <th data-field="isContributor" data-sortable="true">Map Maker</th>
      <th data-field="isCoordinatorAdmin" data-sortable="true">Coordinator Manager</th>
      <th data-field="operate" data-formatter="operateFormatter" data-events="operateEvents">Actions</th>
    </tr>
  </thead>
</table>