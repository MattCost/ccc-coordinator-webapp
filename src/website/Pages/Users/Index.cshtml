@page
@model CCC.website.Pages.Users.IndexPageModel

@using CCC.Authorization
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery

@{
  var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
  ViewData["Title"] = "User Management";
}

@section StyleSheets
  {
  <link rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  
}


@section Scripts
  {
  <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js"></script>
  <script src="~/js/ajax-data.js" asp-append-version="true"></script>

  <script>
    function actionsFormatter(value, row, index) {
      console.log("actionsFormatter was called", { value, row, index });
      let output = [];
      
      @if(Model.ShowCoordinatorAdminSection)
      {
        @: output.push(`<a class="toggle-coordinator" href="javascript:void(0)">${row.isCoordinator ? "Remove" : "Assign"} Coordinator</a>`);
      }
      @if(Model.ShowAdminSection)
      {
        @: output.push(`<a class="toggle-contributor" href="javascript:void(0)">${row.isContributor ? "Remove" : "Assign"} Contributor</a>`);
        @: output.push(`<a class="toggle-coordinator-admin" href="javascript:void(0)">${row.isCoordinatorAdmin ? "Remove" : "Assign"} Coordinator Manager</a>`);
      }
       

      return output.join('&nbsp;/&nbsp;');
    }

    function checkboxFormatter(value, row, index) {
      let output = [];
      output.push(`<i class="fa-regular ${value ? "fa-square-check" : "fa-square" }"></i>&nbsp;`);
      return output.join('');
    }

    var $table = $('#allUserTable')

    function toggleCoordinator(row) {
      console.log("Toggling Coordinator for row", row);
      if(row.isCoordinator)
      {
        $.ajax({
          type: "POST",
          headers: { "RequestVerificationToken": '@token' },
          url: "?handler=RemoveCoordinator",
          data: { userId: row.userId}
        }).done(function (response) {
          console.log("RemoveCoordinator complete");
          console.log(response);
          $table.bootstrapTable('refresh')
        });
      }
      else
      {
        $.ajax({
          type: "POST",
          headers: { "RequestVerificationToken": '@token' },
          url: "?handler=AssignCoordinator",
          data: { userId: row.userId}
        }).done(function (response) {
          console.log("Assign Coordinator complete");
          console.log(response);
          $table.bootstrapTable('refresh')
        });   
      }
    }

    function toggleCoordinatorAdmin(row) {
      console.log("Toggling Coordinator Admin for row", row);
      if(row.isCoordinatorAdmin)
      {
        $.ajax({
          type: "POST",
          headers: { "RequestVerificationToken": '@token' },
          url: "?handler=RemoveCoordinatorAdmin",
          data: { userId: row.userId}
        }).done(function (response) {
          console.log("Remove Coordinator Admin complete");
          console.log(response);
          $table.bootstrapTable('refresh')
        });
      }
      else
      {
        $.ajax({
          type: "POST",
          headers: { "RequestVerificationToken": '@token' },
          url: "?handler=AssignCoordinatorAdmin",
          data: { userId: row.userId}
        }).done(function (response) {
          console.log("Assign Coordinator Admin complete");
          console.log(response);
          $table.bootstrapTable('refresh')
        });   
      }
    }

    function toggleContributor(row) {
      console.log("Toggling Contributor for row", row);
      if(row.isContributor)
      {
        $.ajax({
          type: "POST",
          headers: { "RequestVerificationToken": '@token' },
          url: "?handler=RemoveContributor",
          data: { userId: row.userId}
        }).done(function (response) {
          console.log("Remove Contributor complete");
          console.log(response);
          $table.bootstrapTable('refresh')
        });
      }
      else
      {
        $.ajax({
          type: "POST",
          headers: { "RequestVerificationToken": '@token' },
          url: "?handler=AssignContributor",
          data: { userId: row.userId}
        }).done(function (response) {
          console.log("Assign Contributor complete");
          console.log(response);
          $table.bootstrapTable('refresh')
        });   
      }
    }

    actionEvents = {
      'click .toggle-coordinator': function (e, value, row, index) {
        console.log("calling toggleCoordinator for row", row);
        toggleCoordinator(row);
      },
      'click .toggle-coordinator-admin': function (e, value, row, index) {
        console.log("calling toggleCoordinator for row", row);
        toggleCoordinatorAdmin(row);
      },
      'click .toggle-contributor': function (e, value, row, index) {
        console.log("calling toggleContributor for row", row);
        toggleContributor(row);
      }
    }
  </script>

}



<table data-toggle="table" data-search="true" data-data-type="json" data-ajax="fetchAllUsers" data-pagination="true"
  data-sort-name="name"
  data-sort-order="asc"
  class="table" id="allUserTable">
  <thead>
    <tr>
      <th data-field="displayName" data-sortable="true">Name</th>
      <th data-field="userId" data-visible="false">userId</th>
      @if(Model.ShowAdminSection)
      {
        @: <th data-field="isAdmin" data-sortable="true" data-formatter="checkboxFormatter">System Admin</th>
      }
      <th data-field="isCoordinator" data-sortable="true" data-formatter="checkboxFormatter">Coordinator</th>
      <th data-field="isContributor" data-sortable="true" data-formatter="checkboxFormatter">Map Maker</th>
      <th data-field="isCoordinatorAdmin" data-sortable="true" data-formatter="checkboxFormatter">Coordinator Manager</th>
      <th data-field="actopms" data-formatter="actionsFormatter" data-events="actionEvents">Actions</th>
    </tr>
  </thead>
</table>