@page "{id:guid}"

@model CCC.website.Pages.Events.EditPageModel

@using CCC.Authorization
@using CCC.website.Models

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@{
    var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
    ViewData["Title"] = "Event Details";
    string activeTab = (string?)ViewData["activeTab"] ?? "list-details";
    var rideEvent = Model.RideEvent.RideEvent ?? new CCC.Entities.RideEvent();
    var routes = Model.RideEvent.BikeRoutes.Values.ToList();
    
}
@section Scripts
    {
    <script>
        $(function() {
            var date = new Date();
            var offset = date.getTimezoneOffset();
            console.log( "offset ", offset);
            document.getElementById("TimeZoneOffset").value=offset

            var utcStartDate = new Date(@Model.EventStartTime.ToUnixTimeMilliseconds());
            console.log("utcStartDate ", utcStartDate);
            var localStart = utcStartDate.toLocaleTimeString("en-US",  
            { 
                hour: "numeric",
                minute: "numeric",
                second: "numeric",
                hour12: false,
            });
            console.log("localStart ", localStart);
            var timeInput = document.getElementById("EventTime");
            timeInput.value = localStart;
        });
    </script>

    <script>
        $(
            
            function () {
                document.addEventListener("signup", (e) => {
                    console.log(e);
                    var postSubmit = $.ajax({
                        type: "POST",
                        headers: { "RequestVerificationToken": '@token' },
                        url: "?handler=Signup",
                        data: { rideId: e.detail.rideId, role: e.detail.role }

                    }).done(function (response) {
                        window.location.href = window.location.pathname+"?"+$.param({'activeTab':`list-${e.detail.rideId}`});
                    });
                })

                document.addEventListener("dropout", (e) => {
                    console.log(e);
                    var postSubmit = $.ajax({
                        type: "POST",
                        headers: { "RequestVerificationToken": '@token' },
                        url: "?handler=Dropout",
                        data: { rideId: e.detail.rideId, role: e.detail.role }

                    }).done(function (response) {
                        window.location.href = window.location.pathname+"?"+$.param({'activeTab':`list-${e.detail.rideId}`});
                    });
                })

                const triggerTabList = document.querySelectorAll('#list-tab a')
                triggerTabList.forEach(triggerEl => {
                    const tabTrigger = new bootstrap.Tab(triggerEl)

                    triggerEl.addEventListener('click', event => {
                        event.preventDefault()
                        tabTrigger.show()
                    })
                });

                const urlParams = new URLSearchParams(window.location.search);
                const activeTab = urlParams.get('activeTab');
                if(activeTab != null)
                {
                    console.log("active Tab", activeTab);
                    const triggerEl = document.querySelector(`#list-tab a[href="#${activeTab}"]`)
                    bootstrap.Tab.getInstance(triggerEl).show() // Select tab by name
                }
            }
        );
    </script>
}

<div class="container p-3 m-0">
    @* 1 row for details *@
    <div class="row">
        <h3>Details</h3>
    </div>    
    <div class="row">

        <div class="col-9">
            <form method="post">
                <div class="form-group">
                    @Html.LabelFor(model => Model.EventUpdateModel.Name)
                    @Html.EditorFor(model => Model.EventUpdateModel.Name, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => Model.EventUpdateModel.EventType)
                    <select class="form-control" asp-for="EventUpdateModel.EventType" asp-items="@Html.GetEnumSelectList<CCC.Enums.EventTypes>()">

                    </select>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => Model.EventUpdateModel.Description)
                    @Html.EditorFor(model => Model.EventUpdateModel.Description, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => Model.EventDate)
                    <input class="form-control" type="date" data-val="true" data-val-required="The Date field is required" asp-for="@Model.EventDate"  />
                    <input class="form-control" type="time" data-val="true" data-val-required="The Time field is required" asp-for="@Model.EventTime"  />
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => Model.EventUpdateModel.Location)
                    @Html.EditorFor(model => Model.EventUpdateModel.Location, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div>
                <input type="hidden" asp-for="TimeZoneOffset" />
                <input class="btn btn-primary" id="Submit" type="submit" value="Update Details" asp-page-handler="UpdateEventDetails"/>
                <input class="btn btn-danger" id="Delete" type="submit" value="Delete Event" asp-page-handler="DeleteEvent"
                    onclick="return confirm('Are you sure you want to Delete the event?')" />    
                @if(User.IsAdmin())
                {
                    <input type="checkbox" data-val="true" id="forceDelete" name="forceDelete" value="true">
                     <label for="forceDelete">Use The Force Luke?</label>
                }
                </div>
            </form>
        </div>
    </div>
        
    <div class="row">
        <h3>Add Ride</h3>
        
        <div class="col-9">
            <form method="post">
                @Html.HiddenFor(model => Model.RideCreateModel.RideEventId)
                <div class="form-group">
                    @Html.LabelFor(model => Model.RideCreateModel.RideType, "Ride Type")
                    <select class="form-control" aria-placeholder="rideType" id="RideCreateModel_RideType" name="RideCreateModel.RideType" asp-items='EnumHelper.SelectListForEnum<CCC.Entities.RideType>()'>
                        <option disabled selected value="">Select a ride </option>
                    </select>
                    <small id="rideType" class="form-text text-muted">What kind of ride?</small>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => Model.RideCreateModel.BikeRouteId, "Bike Route")
                    <select class="form-control" aria-placeholder="bikeRouteId" id="RideCreateModel_BikeRouteId" name="RideCreateModel.BikeRouteId" asp-items='Model.BikeRouteSelectList'>
                        <option selected disabled value="">Select a Bike Route </option>
                    </select>
                    <small id="bikeRouteId" class="form-text text-muted">What route?</small>
                </div>
                <input class="btn btn-primary" id="Submit" type="submit" value="Add Route" asp-page-handler="CreateRide" />
            </form>                    
        </div>
    </div>
    
    <div class="row">
        <h3>Rides</h3>
    </div>
    @foreach(var groupRide in Model.RideEvent.GroupRides)
    {
        <div class="row">
            <div class="col-9">
                <form method="post">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">@Html.DisplayFor(modelItem => groupRide.RideType) Ride</li>
                        <li class="list-group-item">
                            <select class="form-control" aria-placeholder="bikeRouteId" asp-for="@groupRide.BikeRouteId" asp-items='Model.BikeRouteSelectList'>
                            </select>
                        </li>
                    </ul>
                     <input type="hidden" name="rideId" value="@groupRide.Id" />
                     <input class="btn btn-primary" id="Update" type="submit" value="Update Route" asp-page-handler = "UpdateRide" />
                    <input class="btn btn-danger" id="Delete" type="submit" value="Delete Ride" asp-page-handler="DeleteRide"
                        onclick="return confirm('Are you sure you want to Delete this ride?')" />    
                </form>
            </div>
        </div>
    }

</div>  @* end of contianer *@