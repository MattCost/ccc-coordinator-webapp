@page "{id:guid}"
@model CCC.website.Pages.Events.DetailsPageModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@using CCC.Authorization
@{
    var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
    ViewData["Title"] = "Event Details";
}
@section Scripts
    {
    <script>
        $(
            function () {
                document.addEventListener("signup", (e) => {
                    console.log(e);
                    var postSubmit = $.ajax({
                        type: "POST",
                        headers: { "RequestVerificationToken": '@token' },
                        url: "?handler=Signup",
                        data: { rideId: e.detail.rideId, role: e.detail.role }

                    }).done(function (response) {
                        window.location.href = window.location.pathname+"?"+$.param({'activeTab':`list-${e.detail.rideId}`});
                    });
                })

                document.addEventListener("dropout", (e) => {
                    console.log(e);
                    var postSubmit = $.ajax({
                        type: "POST",
                        headers: { "RequestVerificationToken": '@token' },
                        url: "?handler=Dropout",
                        data: { rideId: e.detail.rideId, role: e.detail.role }

                    }).done(function (response) {
                        window.location.href = window.location.pathname+"?"+$.param({'activeTab':`list-${e.detail.rideId}`});
                    });
                })

                const triggerTabList = document.querySelectorAll('#list-tab a')
                triggerTabList.forEach(triggerEl => {
                    const tabTrigger = new bootstrap.Tab(triggerEl)

                    triggerEl.addEventListener('click', event => {
                        event.preventDefault()
                        tabTrigger.show()
                    })
                });

                const urlParams = new URLSearchParams(window.location.search);
                const activeTab = urlParams.get('activeTab');
                if(activeTab != null)
                {
                    console.log("active Tab", activeTab);
                    const triggerEl = document.querySelector(`#list-tab a[href="#${activeTab}"]`)
                    bootstrap.Tab.getInstance(triggerEl).show() // Select tab by name
                }
            }
        );
    </script>
}

<div>
    <h3>
        The Event Details!
    </h3>
    @if(User.ShowCrudOperations())
    {
        <a asp-page="Edit" asp-route-id="@Model.Id" class="btn btn-primary btn-md" role="button" >Edit</a>
    }
        
</div>

@* Why did I want to use a partial? *@
@Html.DisplayFor(model => model.RideEvent,"RideEventViewModelDetails2", Model.ExtraData)

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
  Advanced Signup
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Modify Signups</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
        <form method="post">
            <div class="modal-body">
            @{
                @* open a div here *@
                CCC.Entities.RideType currentRideType = Model.RideEvent.GroupRides.Where(ride => ride.Id == Model.Signups[0].RideId).First().RideType;
                @: <div class="border p-2">@currentRideType<div class="border p-2">
                for(int i=0 ; i<Model.Signups. Count ; i++)
                {
                    CCC.Entities.RideType rideType = Model.RideEvent.GroupRides.Where(ride => ride.Id == Model.Signups[i].RideId).First().RideType;
                    if(currentRideType != rideType)
                    {
                        currentRideType = rideType;
                        @: </div></div><div class="border p-2 ">@currentRideType<div class="border p-2">
                        
                    }
                    // if Model.Signups[i].RideType != currentRideType
                    // then close the div, and open a new div and print out the new ride type
                    @Html.HiddenFor(modelItem => Model.Signups[i].RideId)
                    @Html.HiddenFor(modelItem => Model.Signups[i].CoordinatorRole)
                    <label for="Model.Signups[i].UserId">@Model.Signups[i].CoordinatorRole </label>
                    
                    <select class="form-control" asp-for="Signups[i].UserId" asp-items="Model.Coordinators">
                    </select>

                }
                @: </div></div>
                
            }
            
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <input class="btn btn-primary" id="Submit" type="submit" value="Save Changes" asp-page-handler="AdvancedSignup"/>
            </div>
        </form>
    </div>
  </div>
</div>
