@page "{id:guid}"
@model CCC.website.Pages.Events.DetailsPageModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@using CCC.Authorization
@{
    var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
    ViewData["Title"] = "Event Details";
    string activeTab = (string?)ViewData["activeTab"] ?? "list-details";
    var rideEvent = Model.RideEventVM.RideEvent ?? new CCC.Entities.RideEvent();
    var routes = Model.RideEventVM.BikeRoutes.Values.ToList();
    ViewData["CoordinatorDisplayNames"] = Model.RideEventVM.CoordinatorDisplayNames;
}

@section Scripts
{
    <script>
        $(
            function () {
                document.addEventListener("signup", (e) => {
                    console.log(e);
                    var postSubmit = $.ajax({
                        type: "POST",
                        headers: { "RequestVerificationToken": '@token' },
                        url: "?handler=Signup",
                        data: { entityId: e.detail.entityId, role: e.detail.role, entityType: e.detail.entityType }

                    }).done(function (response) {
                        if(e.detail.entityType == 'GroupRide') {
                            window.location.href = window.location.pathname+"?"+$.param({'activeTab':`list-${e.detail.entityId}`});
                        }
                        else if(e.detail.entityType == "RideEvent") {
                            window.location.href = window.location.pathname+"?"+$.param({'activeTab':`list-details`});
                        }
                    });
                })

                document.addEventListener("dropout", (e) => {
                    console.log(e);
                    var postSubmit = $.ajax({
                        type: "POST",
                        headers: { "RequestVerificationToken": '@token' },
                        url: "?handler=Dropout",
                        data: { entityId: e.detail.entityId, role: e.detail.role, entityType: e.detail.entityType }


                    }).done(function (response) {
                        if(e.detail.entityType == 'GroupRide') {
                            window.location.href = window.location.pathname+"?"+$.param({'activeTab':`list-${e.detail.entityId}`});
                        }
                        else if(e.detail.entityType == "RideEvent") {
                            window.location.href = window.location.pathname+"?"+$.param({'activeTab':`list-details`});
                        }                    });
                })

                const triggerTabList = document.querySelectorAll('#list-tab a')
                triggerTabList.forEach(triggerEl => {
                    const tabTrigger = new bootstrap.Tab(triggerEl)

                    triggerEl.addEventListener('click', event => {
                        event.preventDefault()
                        tabTrigger.show()
                    })
                });

                const urlParams = new URLSearchParams(window.location.search);
                const activeTab = urlParams.get('activeTab');
                if(activeTab != null)
                {
                    console.log("active Tab", activeTab);
                    const triggerEl = document.querySelector(`#list-tab a[href="#${activeTab}"]`)
                    bootstrap.Tab.getInstance(triggerEl).show() // Select tab by name
                }
            }
        );
    </script>
}

<div>
    <h3>
        The Event Details!
    </h3>
    @if(User.ShowCrudOperations())
    {
        <a asp-page="Edit" asp-route-id="@Model.Id" class="btn btn-primary btn-md" role="button" >Edit</a>
    }
        
</div>

@* Why did I want to use a partial? *@
@* @Html.DisplayFor(model => model.RideEvent,"RideEventViewModelDetails2", Model.ExtraData) *@


<div class="container p-3 m-0">
    <div class="row">
        <div class="col-3 ">
            <div class="list-group" id="list-tab" role="tablist">

                <a class="list-group-item list-group-item-action @( activeTab == "list-details" ? "active" : "")"
                    id="list-details-list" data-bs-toggle="list" href="#list-details" role="tab"
                    aria-controls="list-details">Details</a>
                @foreach (var groupRide in Model.RideEventVM.GroupRides)
                {
                    <a class="list-group-item list-group-item-action" @(activeTab == $"list-{groupRide.Id}" ? "active" :
                    "") id=@($"list-{groupRide.Id}-list") data-bs-toggle="list" href="#@($"list-{groupRide.Id}")"
                        role="tab" aria-controls="@($"list-{groupRide.Id}")">@groupRide.RideType Ride</a>
                }
                @if (User.IsCoordinator())
                {
                    <a class="list-group-item list-group-item-action @( activeTab == "list-signups" ? "active" : "")" id="list-signups-list" data-bs-toggle="list" href="#list-signups" role="tab" aria-controls="list-signups">Signups</a>
                }
            </div>
        </div>
        <div class="col-9">
            <div class="tab-content" id="nav-tabContent">
                <div class="tab-pane fade show @( activeTab == "list-details" ? "active" : "")" id="list-details"
                    role="tabpanel" aria-labelledby="list-details-list">
                    <div class="row">
                        <div class="col"> @* was col-6*@
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">@Html.DisplayFor(model => rideEvent.Name)</li>
                                <li class="list-group-item">@Html.DisplayFor(model => rideEvent.Location)</li>
                                <li class="list-group-item">@Html.DisplayFor(model => rideEvent.StartTime)</li>
                                <li class="list-group-item">@Html.DisplayFor(model => rideEvent.Description)</li>
                            </ul>
                            @* Put grillmaster and facilitator here *@
                            @if (User.IsCoordinator())
                            {
                                <div class="row mt-3">
                                    <div class="col">
                                    @Html.DisplayFor(modelItem => rideEvent, "SupportSignupWidget")
                                </div>
                            </div>
                            }

                        </div>
                    </div>

                    @if(User.IsCoordinator())
                    {
                        <div class="row">
                            <div class="col">
                                <button type="button" class="btn btn-link" onclick="printId('allCueSheets')">Print Cue Sheets</button> <button type="button" class="btn btn-link" onclick="printId('rolePrintout')">Print Role List</button>
                                @* everything inside this div will be invisible *@
                                <div class="print-preview">
                                    @* everything inside this div will be printed *@
                                    <div id='allCueSheets'>
                                        @Html.DisplayFor( model => routes, "EventPrintCueSheets")
                                    </div>
                                    <div id='rolePrintout'>
                                        @Html.DisplayFor( model => model.RideEventVM, "EventPrintRoleList")
                                    </div>
                                </div>
                            </div>
                        </div>
                    }


                </div>
            @foreach (var groupRide in Model.RideEventVM.GroupRides)
            {
                <div class="tab-pane fade @( activeTab == $"list-{groupRide.Id}" ? "active" : "")"
                    id=@($"list-{groupRide.Id}") role="tabpanel" aria-labelledby=@($"list-{groupRide.Id}-list")>
                    <div class="row">
                        <div class="col">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">@Html.DisplayFor(modelItem => groupRide.RideType) Ride</li>
                                <li class="list-group-item">@Html.DisplayFor(modelItem =>
                                Model.RideEventVM.BikeRoutes[groupRide.BikeRouteId], "BikeRouteLink")</li>
                                <li class="list-group-item">@Html.DisplayFor(modelItem =>
                                Model.RideEventVM.BikeRoutes[groupRide.BikeRouteId].Description)</li>

                            </ul>
                        </div>
                    </div>
                    @if (User.IsCoordinator())
                    {
                        <div class="row mt-3">
                            <div class="col">
                                @Html.DisplayFor(modelItem => groupRide, "CoordinatorSignupWidget")
                            </div>
                        </div>
                    }
                    <div class="row mt-5">
                        <div class="col">
                            @Html.DisplayFor(modelItem => Model.RideEventVM.BikeRoutes[groupRide.BikeRouteId],"CueTableView")
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col">
                            @Html.DisplayFor(modelItem => Model.RideEventVM.BikeRoutes[groupRide.BikeRouteId],"CueTablePrintView")
                        </div>
                    </div>
                </div>
            }

            @if (User.IsCoordinator())
            {
                <div class="tab-pane fade show @( activeTab == "list-signups" ? "active" : "")" id="list-signups" role="tabpanel" aria-labelledby="list-signups-list">
                        <form method="post">
                        @{
                            var groupRides = Model.Signups.Where(entry => entry.EntityType == CCC.Enums.EntityTypes.GroupRide);
                            var support = Model.Signups.Where(entry => entry.EntityType == CCC.Enums.EntityTypes.RideEvent);                        
                            bool isPink = true;
                            if(support.Any())
                            {
                                @: <div class="border p-2 @(isPink ? "ccc-pink" : "ccc-green")">Support<div class="border p-2">                            
                                for(int i=0 ; i<Model.Signups.Count ; i++)
                                {
                                    if(Model.Signups[i].EntityType == CCC.Enums.EntityTypes.RideEvent)
                                    {
                                        @Html.HiddenFor(modelItem => Model.Signups[i].EntityId)
                                        @Html.HiddenFor(modelItem => Model.Signups[i].EntityType)
                                        @Html.HiddenFor(modelItem => Model.Signups[i].CoordinatorRole)
                                        <label for="Model.Signups[i].UserId">@Model.Signups[i].CoordinatorRole </label>
                                        
                                        <select class="form-control" asp-for="Signups[i].UserId" asp-items="Model.CoordinatorSelectList">
                                        </select>
                                    }                                
                                }
                                isPink = false;
                                @:</div></div>
                            }
                            
                            if(groupRides.Any())
                            {
                                var firstRideId = groupRides.First().EntityId;
                                CCC.Entities.RideType currentRideType = Model.RideEventVM.GroupRides.Where(ride => ride.Id == firstRideId).First().RideType;
                                @: <div class="border p-2 @(isPink ? "ccc-pink" : "ccc-green")">@currentRideType<div class="border p-2">
                                for(int i=0 ; i<Model.Signups.Count ; i++)
                                {
                                    if(Model.Signups[i].EntityType == CCC.Enums.EntityTypes.GroupRide)
                                    {
                                        CCC.Entities.RideType rideType = Model.RideEventVM.GroupRides.Where(ride => ride.Id == Model.Signups[i].EntityId).First().RideType;
                                        if(currentRideType != rideType)
                                        {
                                            currentRideType = rideType;
                                            isPink = ! isPink;
                                            @: </div></div><div class="border p-2 @(isPink ? "ccc-pink" : "ccc-green")">@currentRideType<div class="border p-2">
                                        }
                                        @Html.HiddenFor(modelItem => Model.Signups[i].EntityId)
                                        @Html.HiddenFor(modelItem => Model.Signups[i].EntityType)
                                        @Html.HiddenFor(modelItem => Model.Signups[i].CoordinatorRole)
                                        <label for="Model.Signups[i].UserId">@Model.Signups[i].CoordinatorRole </label>
                                        
                                        <select class="form-control" asp-for="Signups[i].UserId" asp-items="Model.CoordinatorSelectList">
                                        </select>
                                    }

                                }
                                @: </div></div>
                            }
                            
                        }
                        <input class="btn btn-primary" id="Submit" type="submit" value="Save Changes" asp-page-handler="AdvancedSignup"/>
                    </form>
                </div>
            }
        </div>
    </div>
</div>
</div>



@* <!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
  Adjust Signups
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Adjust Signups</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
        <form method="post">
            <div class="modal-body">
            @{
                CCC.Entities.RideType currentRideType = Model.RideEvent.GroupRides.Where(ride => ride.Id == Model.Signups[0].RideId).First().RideType;
                bool isPink = true;
                @: <div class="border p-2 @(isPink ? "ccc-pink" : "ccc-green")">@currentRideType<div class="border p-2">
                for(int i=0 ; i<Model.Signups. Count ; i++)
                {
                    CCC.Entities.RideType rideType = Model.RideEvent.GroupRides.Where(ride => ride.Id == Model.Signups[i].RideId).First().RideType;
                    if(currentRideType != rideType)
                    {
                        currentRideType = rideType;
                        isPink = ! isPink;
                        @: </div></div><div class="border p-2 @(isPink ? "ccc-pink" : "ccc-green")">@currentRideType<div class="border p-2">
                    }
                    @Html.HiddenFor(modelItem => Model.Signups[i].RideId)
                    @Html.HiddenFor(modelItem => Model.Signups[i].CoordinatorRole)
                    <label for="Model.Signups[i].UserId">@Model.Signups[i].CoordinatorRole </label>
                    
                    <select class="form-control" asp-for="Signups[i].UserId" asp-items="Model.Coordinators">
                    </select>

                }
                @: </div></div>
                
            }
            
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <input class="btn btn-primary" id="Submit" type="submit" value="Save Changes" asp-page-handler="AdvancedSignup"/>
            </div>
        </form>
    </div>
  </div>
</div> *@
